    #This holds what the actual deck contains
    #Simple method of maintaining a consistent card state - will have to mess with this later


class Deck:
    def __init__(self, CardNum, CardSuit, CardID, Drawn, HeldBy, InPlay) :
        self.CardNum = CardNum
        #numerical value held on the card - 1-10+JQKA        
        self.CardSuit = CardSuit
        #suit of the card
        self.CardID = CardID
        #unique identifier given to each individual card of the deck
        self.Drawn = Drawn
        #boolean checking if the card is drawn by a player
        self.HeldBy = HeldBy    
        #ID holding which player played or is holding a card
        self.InPlay = InPlay   
        #boolean triggering if the card has been placed on the table.
    def FetchCardNum(self) :
        return self.CardNum      
    def FetchCardSuit(self) :
        return self.CardSuit
    def CardID(self):
        return self.CardID
    def Drawn(self) :
        return self.Drawn
    def HeldBy(self) :
        return self.HeldBy
    def InPlay(self) :
        return self.InPlay

    #This is intended to intialize the Deck class variables
    #This uses Tuple datatype
def SetDeck() :
        InitCardSuit = ['Diamonds', 'Clubs', 'Hearts', 'Spades']
        InitCardNum = [i for i in range (1,11)] + ['Jack', 'Queen', 'King', 'Ace']
        InitDrawn = False
        #by default, cards are not drawn
        InitHeldBy = ['Deck', 'Player1', 'Player2']
        #Heldby will track who 'owns' a card at any time.
        InitInPlay = False
        #by default, cards are not in play
        return InitCardSuit, InitCardNum, InitDrawn, InitHeldBy, InitInPlay


InitCardSuit, InitCardNum, InitDrawn, InitHeldby, InitInPlay  = SetDeck()
deck = Deck(CardSuit = InitCardSuit, CardNum = InitCardNum)


print (deck.FetchCardSuit())
print (deck.FetchCardNum())
print (type(deck.CardSuit))
print (type(deck.CardNum))